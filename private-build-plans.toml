# build with: npm run build -- ttf::iosevka-aile-code
# https://github.com/be5invis/Iosevka/blob/master/build-plans.toml
# doc\custom-build.md

[buildPlans.iosevka-aile-code]               # <iosevka-aile-code> is your plan name
family = "Iosevka Aile Code"                 # Font menu family name
spacing = "quasi-proportional"
serifs = "sans"
no-cv-ss = true

[buildPlans.iosevka-aile-code.variants.design]
capital-d = 'more-rounded-serifless'
capital-g = 'toothless-corner-serifless-hooked'
capital-m = 'flat-bottom'
a = "double-storey-tailed"
f = 'flat-hook-crossbar-at-x-height'
i = 'serifless'
j = 'flat-hook-serifless'
k = 'straight-serifless'
l = 'tailed'
r = 'compact' # 'hookless'?
t = 'flat-hook-short-neck'
u = 'toothed'
w = 'straight-flat-top'
one = 'base'
four = 'closed'
six = 'closed-contour'
nine = 'closed-contour'
asterisk = 'penta-low'
caret = 'low'
brace = 'straight'
number-sign = 'slanted'
at = 'fourfold'
dollar = 'open'
percent = 'rings-continuous-slash'
bar = 'force-upright'


###################################################################################################
# Configure ligations

[buildPlans.iosevka-aile-code.ligations]
inherits = "dlig"   # Optional; inherits an existing ligation set
disables = [
    # "trig",
    "dot-as-operator"]               # Optional; disable specific ligation groups, overrides inherited ligation set
enables  = []               # Optional; enable specific ligation groups, overrides inherited ligation set

# End ligation section
###################################################################################################



###################################################################################################
# Override default building weights
# When buildPlans.<plan name>.weights is absent, all weights would built and mapped to
# default values.
# IMPORTANT : Currently "menu" and "css" property only support numbers between 0 and 1000.
#             and "shape" properly only supports number between 100 and 900 (inclusive).
#             If you decide to use custom weights you have to define all the weights you
#             plan to use otherwise they will not be built.
[buildPlans.iosevka-aile-code.weights.regular]
shape = 400  # Weight for glyph shapes.
menu  = 400  # Weight for the font's names.
css   = 400  # Weight for webfont CSS.

[buildPlans.iosevka-aile-code.weights.book]
shape = 450
menu  = 450  # Use 450 here to name the font's weight "Book"
css   = 450

[buildPlans.iosevka-aile-code.weights.bold]
shape = 700
menu  = 700
css   = 700

# End weight section
###################################################################################################

###################################################################################################
# Override default building slope sets
# Format: <upright|italic|oblique> = <"normal"|"italic"|"oblique">
# When this section is absent, all slopes would be built.

[buildPlans.iosevka-aile-code.slopes.upright]
angle = 0             # Angle in degrees. Valid range [0, 15]
shape = "upright"     # Slope grade used for shape selection.  `upright` | `oblique` | `italic`
menu  = "upright"     # Slope grade used for naming.           `upright` | `oblique` | `italic`
css   = "normal"      # Slope grade used for webfont CSS.      `normal`  | `oblique` | `italic`

# [buildPlans.iosevka-aile-code.slopes.oblique]
# angle = 9.4
# shape = "oblique"
# menu  = "oblique"
# css   = "oblique"

[buildPlans.iosevka-aile-code.slopes.italic]
angle = 9.4
shape = "italic"
menu  = "italic"
css   = "italic"

# End slope section
###################################################################################################

###################################################################################################
# Override default building widths
# When buildPlans.<plan name>.widths is absent, all widths would built and mapped to
# default values.
# IMPORTANT : Currently "shape" property only supports numbers between 434 and 664 (inclusive),
#             while "menu" only supports integers between 1 and 9 (inclusive).
#             The "shape" parameter specifies the unit width, measured in 1/1000 em. The glyphs'
#             width are equal to, or a simple multiple of the unit width.
#             If you decide to use custom widths you have to define all the widths you plan to use,
#             otherwise they will not be built.

[buildPlans.iosevka-aile-code.widths.normal]
shape = 500        # Unit Width, measured in 1/1000 em.
menu  = 5          # Width grade for the font's names.
css   = "normal"   # "font-stretch' property of webfont CSS.

[buildPlans.iosevka-aile-code.widths.extended]
shape = 600
menu  = 7
css   = "expanded"

# End width section
###################################################################################################

###################################################################################################
# Character Exclusion
# Specify character ranges in the section below to exclude certain characters from the font being
# built. Remove this section when this feature is not needed.

# [buildPlans.iosevka-aile-code.exclude-chars]
# ranges = [[10003, 10008]]

# End character exclusion
###################################################################################################

###################################################################################################
# Compatibility Ligatures
# Certain applications like Emacs does not support proper programming liagtures provided by
# OpenType, but can support ligatures provided by PUA codepoints. Therefore you can edit the
# following section to build PUA characters that are generated from the OpenType ligatures.
# Remove this section when compatibility ligatures are not needed.

# [[buildPlans.iosevka-aile-code.compatibility-ligatures]]
# unicode = 57600 # 0xE100
# featureTag = 'calt'
# sequence = '<*>'

# End compatibility ligatures section
###################################################################################################

###################################################################################################
# Metric overrides
# Certain metrics like line height (leading) could be overridden in your build plan file.
# Edit the values to change the metrics. Remove this section when overriding is not needed.

# [buildPlans.iosevka-aile-code.metric-override]

# End metric override section
###################################################################################################
